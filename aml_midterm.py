# -*- coding: utf-8 -*-
"""AML_Midterm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-2lxKlNwAW0DNunAk710ew3R9WmeTxWM
"""

import pandas as pd

# Load datasets
games_df = pd.read_csv('path/to/games.csv')
plays_df = pd.read_csv('path/to/plays.csv')
player_play_df = pd.read_csv('path/to/player_play.csv')
players_df = pd.read_csv('path/to/players.csv')

from google.colab import drive
drive.mount('/content/drive')

# Load weekly tracking data
tracking_weeks = []
for week in range(1, 18):  # Assuming 17 weeks of data
    tracking_file = f'path/to/tracking_week_{week}.csv'
    tracking_df = pd.read_csv(tracking_file)
    tracking_weeks.append(tracking_df)

# Concatenate all weeks into a single DataFrame
tracking_df = pd.concat(tracking_weeks, ignore_index=True)

# Merge games and plays data
merged_df = plays_df.merge(games_df, on='gameId', how='left')

# Merge player play data
merged_df = merged_df.merge(player_play_df, on=['gameId', 'playId'], how='left')

# Merge player information
merged_df = merged_df.merge(players_df, on='nflId', how='left')

# Merge tracking data
merged_df = merged_df.merge(tracking_df, on=['gameId', 'playId', 'nflId'], how='left')

# Select relevant columns for pre-snap analysis
pre_snap_columns = [
    'gameId', 'playId', 'nflId', 'displayName', 'position', 'teamAbbr',
    'offenseFormation', 'playAction', 'isDropback', 'pff_passCoverage', 'pff_manZone',
    'frameType', 'x', 'y', 's', 'a', 'o', 'dir'
]

pre_snap_df = merged_df[pre_snap_columns]

# Preview the merged dataset
print(pre_snap_df.head())

# Filter for pre-snap frames only
pre_snap_frames = pre_snap_df[pre_snap_df['frameType'] == 'pre-snap']

# Example: Group by team and position to analyze average speed and acceleration before snap
pre_snap_motion = pre_snap_frames.groupby(['teamAbbr', 'position'])[['s', 'a']].mean().reset_index()

# Display the results
print(pre_snap_motion)

import matplotlib.pyplot as plt

# Plot player positions before the snap
plt.figure(figsize=(10, 6))
for team in pre_snap_frames['teamAbbr'].unique():
    team_data = pre_snap_frames[pre_snap_frames['teamAbbr'] == team]
    plt.scatter(team_data['x'], team_data['y'], label=team, alpha=0.6)

plt.xlabel('X Position (yards)')
plt.ylabel('Y Position (yards)')
plt.title('Player Positions Before the Snap')
plt.legend()
plt.grid(True)
plt.show()